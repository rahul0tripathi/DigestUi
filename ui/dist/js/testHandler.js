"use strict";function asyncGeneratorStep(t,e,n,o,a,r,s){try{var c=t[r](s),i=c.value}catch(t){return void n(t)}c.done?e(i):Promise.resolve(i).then(o,a)}function _asyncToGenerator(c){return function(){var t=this,s=arguments;return new Promise(function(e,n){var o=c.apply(t,s);function a(t){asyncGeneratorStep(o,e,n,a,r,"next",t)}function r(t){asyncGeneratorStep(o,e,n,a,r,"throw",t)}a(void 0)})}}function gettestscript(){return $("#test-editor").data("ace").element[0].value}$(document).ready(function(){$("#test-editor").val('import http from "k6/http";\n    import { check, sleep } from "k6";\n    export let options = {\n      vus: 0,\n      duration: "1s"\n    };\n    export default function() {\n      let res =  http.get(#digest.selected<:id=abcd>#);\n      check(res, {\n        "is status 200": r => r.status === 200\n      });\n     sleep(1)\n    };\n         '),$("#test-editor").ace({theme:"solarized_dark",lang:"javascript",height:"100%","font-size":"15px"}),$("#run_test").click(function(){try{var o;for(b=!1,i=0;i<_apis.length&&(console.log(i),$("#testOn_".concat(_apis[i].id)).prop("checked")&&(o=_apis[i],b=!0),1!=b);i++);console.log(o);var t=gettestscript().split("#");for(i=0;i<t.length;i++)if("digest"==t[i].split(".")[0]){if(configs=[],regex=new RegExp("<(.*?)>"),t[i].split("&&").forEach(function(t){if(null!=regex.exec(t)){console.log("hello");var e=regex.exec(t)[1].split("=");configs.push({data:e[0],val:e[1]})}}),0<configs.length){var a=o.route.split("/");a.forEach(function(e,t){var n=configs.find(function(t){return t.data==e});n&&(a[t]=n.val)}),o.route=a.join("/")}t[i]=_host+o.route}var e=t.join('"'),r=shortid();M.toast({html:'<span class="material-icons" style="color:#05dc5c">\n        notification_important\n        </span> Test '.concat(r," has been deployed"),classes:"rounded"}),$(".test_logger").prepend('<div class="row"><div class="metaData" style="color:#05dc5c">['.concat((new Date).toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(:[\d]{2})(.*)/,"$1$3"),"]:[").concat(_host+o.route,"] Test ").concat(r," has been deployed</div><br></div>")),axios.post("http://localhost:5432/api/runTest",{script:e,testId:r}).then(function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function t(e){var n;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:for(n="",i=0;i<e.data.length;i++)"\n"==e.data[i]||"\r"==e.data[i]?n+="<br>&nbsp;":" "==e.data[i]?n+="&nbsp;":n+=e.data[i];M.toast({html:'<span class="material-icons" style="color:#05dc5c">\n        notification_important\n        </span> Test '.concat(r," has Completed"),classes:"rounded"}),$(".test_logger").prepend('<div class="row"><div class="metaData" style="color:#05dc5c">['.concat((new Date).toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(:[\d]{2})(.*)/,"$1$3"),"]:[").concat(_host+o.route,"] Test ").concat(r," has completed with the following results</div><br>").concat(n,"</div>"));case 4:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}()).catch(function(t){console.log(t)})}catch(t){M.toast({html:'<span class="material-icons" style="color:#ff0051">\n        error\n        </span>  '.concat(t),classes:"rounded"})}})});